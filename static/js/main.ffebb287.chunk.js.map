{"version":3,"sources":["SeasonDisplay.js","Spinner.js","index.js","useLocation.js"],"names":["seasonConfig","summer","text","iconName","winter","SeasonDisplay","props","lat","month","season","Date","getMonth","className","Spinner","message","defaultProps","App","content","useState","setLat","errorMessage","setErrorMessage","useEffect","window","navigator","geolocation","getCurrentPosition","position","coords","latitude","err","useLocation","ReactDOM","render","document","querySelector"],"mappings":"mKAGMA,G,KAAe,CACjBC,OAAQ,CACJC,KAAM,uBACNC,SAAU,OAEdC,OAAQ,CACJF,KAAM,mBACNC,SAAU,eAyBHE,EAbO,SAAAC,GAClB,IATeC,EAAKC,EASdC,GATSF,EASUD,EAAMC,KATXC,GASgB,IAAIE,MAAOC,YARnC,GAAKH,EAAQ,EACdD,EAAM,EAAI,SAAW,SAErBA,EAAM,EAAI,SAAW,UAIL,EAEFP,EAAaS,GAA/BP,EAFoB,EAEpBA,KAAMC,EAFc,EAEdA,SAEb,OACI,yBAAKS,UAAS,yBAAoBH,IAC9B,uBAAGG,UAAS,4BAAuBT,EAAvB,WACZ,4BAAKD,GACL,uBAAGU,UAAS,6BAAwBT,EAAxB,aC5BlBU,EAAU,SAAAP,GACZ,OACI,yBAAKM,UAAU,oBACX,yBAAKA,UAAU,sBAAsBN,EAAMQ,WAKvDD,EAAQE,aAAe,CACnBD,QAAS,cAGED,QCPTG,EAAM,WAAO,IAGXC,EAHU,ECLH,WAAO,IAAD,EACKC,mBAAS,MADd,mBACVX,EADU,KACLY,EADK,OAEuBD,mBAAS,IAFhC,mBAEVE,EAFU,KAEIC,EAFJ,KAWjB,OAPAC,qBAAU,WACNC,OAAOC,UAAUC,YAAYC,oBACzB,SAAAC,GAAQ,OAAIR,EAAOQ,EAASC,OAAOC,aACnC,SAAAC,GAAG,OAAIT,EAAgBS,EAAIhB,cAEhC,IAEI,CAACP,EAAKa,GDLeW,GADd,mBACPxB,EADO,KACFa,EADE,KAOd,OAHkBH,EAAjBG,EAA2B,uCAAaA,GAAwBb,EAC7D,kBAAC,EAAD,CAAeA,IAAKA,IAAqB,kBAAC,EAAD,CAASO,QAAQ,mCAG1D,yBAAKF,UAAU,cACVK,IAMbe,IAASC,OAAO,kBAAC,EAAD,MAAQC,SAASC,cAAc,W","file":"static/js/main.ffebb287.chunk.js","sourcesContent":["import './SeasonDisplay.css';\nimport React from 'react';\n\nconst seasonConfig = {\n    summer: {\n        text: \"Let's hit the beach!\",\n        iconName: 'sun'\n    },\n    winter: {\n        text: 'Burr it is cold!',\n        iconName: 'snowflake'\n    }\n};\n\nconst getSeason = (lat, month) => {\n    if (month > 2 && month < 9) {\n        return lat > 0 ? 'summer' : 'winter';\n    } else {\n        return lat > 0 ? 'winter' : 'summer';\n    }\n};\n\nconst SeasonDisplay = props => {\n    const season = getSeason(props.lat, new Date().getMonth());\n    const {text, iconName} = seasonConfig[season];\n\n    return (\n        <div className={`season-display ${season}`}>\n            <i className={`icon-left massive ${iconName} icon`}/>\n            <h1>{text}</h1>\n            <i className={`icon-right massive ${iconName} icon`}/>\n        </div>\n    );\n};\n\nexport default SeasonDisplay\n","import React from 'react';\n\nconst Spinner = props => {\n    return (\n        <div className=\"ui active dimmer\">\n            <div className=\"ui big text loader\">{props.message}</div>\n        </div>\n    );\n};\n\nSpinner.defaultProps = {\n    message: 'Loading...'\n};\n\nexport default Spinner\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport SeasonDisplay from './SeasonDisplay';\nimport Spinner from './Spinner';\n\nimport useLocation from \"./useLocation\";\n\nconst App = () => {\n    const [lat, errorMessage] = useLocation()\n\n    let content;\n    (errorMessage) ? (content = <div>Error: {errorMessage}</div>) : (lat) ? (content =\n        <SeasonDisplay lat={lat}/>) : (content = <Spinner message=\"Please accept location request\"/>)\n\n    return (\n        <div className=\"border red\">\n            {content}\n        </div>\n    )\n\n}\n\nReactDOM.render(<App/>, document.querySelector('#root'));\n","import {useState, useEffect} from \"react\";\n\nexport default () => {\n    const [lat, setLat] = useState(null)\n    const [errorMessage, setErrorMessage] = useState('')\n\n    useEffect(() => {\n        window.navigator.geolocation.getCurrentPosition(\n            position => setLat(position.coords.latitude),\n            err => setErrorMessage(err.message)\n        );\n    }, [])\n\n    return [lat, errorMessage]\n}"],"sourceRoot":""}